CREATE DATABASE PRACTISE_ASSIGNMENT_4;

USE PRACTISE_ASSIGNMENT_4;

CREATE TABLE ORDERS (
    ORDER_ID INT PRIMARY KEY,
    ORDER_DATE DATE,
    AMOUNT DECIMAL(10, 2),
    CUSTOMER_ID INT
);

INSERT INTO ORDERS (ORDER_ID, ORDER_DATE, AMOUNT, CUSTOMER_ID)
VALUES
(101, '2024-08-01', 250.00, 1),
(102, '2024-08-02', 150.50, 2),
(103, '2024-08-03', 320.75, 3),
(104, '2024-08-04', 89.99, 4),
(105, '2024-08-05', 450.00, 5);

SELECT * FROM ORDERS;

CREATE TABLE CUSTOMER(
CUSTOMER_ID  INT PRIMARY KEY,
FIRST_NAME	 VARCHAR(50),
LAST_NAME    VARCHAR(50),
EMAIL		 VARCHAR(100),
ADDRESSS	 VARCHAR(100),
CITY		 VARCHAR(50),
STATES		 VARCHAR(50),
ZIP			 NVARCHAR(50));

INSERT INTO CUSTOMER (CUSTOMER_ID, FIRST_NAME, LAST_NAME, EMAIL, ADDRESSS, CITY, STATES, ZIP) VALUES
(1, 'GEORGE', 'THOMAS', 'GEORGE.THOMAS@EXAMPLE.COM', '789 OAK ST', 'SAN JOSE', 'CA', 95112),
(2, 'GRACE', 'WILLIAMS', 'TRACE.WILLIAMS@EXAMPLE.COM', '456 MAPLE ST', 'SAN JOSE', 'CA', 95113),
(3, 'TYLER', 'JOHNSON', 'TYLER.JOHNSON@EXAMPLE.COM', '123 ELM ST', 'AUSTIN', 'TX', 78701),
(4, 'GINA', 'BROWN', 'GINA.BROWN@EXAMPLE.COM', '101 PINE AVE', 'MIAMI', 'FL', 33101),
(5, 'TREVOR', 'DAVIS', 'TREVOR.DAVIS@EXAMPLE.COM', '202 BIRCH RD', 'CHICAGO', 'IL', 60601);

SELECT * FROM CUSTOMER;

SELECT * FROM ORDERS;


--ANS Q1

SELECT 
MIN(AMOUNT) AS [MININUM AMOUNT],
MAX(AMOUNT) AS [MAXIMUM AMOUNT],
AVG(AMOUNT) AS [AVERAGE AMOUNT] FROM ORDERS;


--ANS Q2

CREATE FUNCTION MULTIPLYBYTEN ( @INPUTNUMBER INT)
RETURNS INT
AS
BEGIN
     RETURN @INPUTNUMBER * 10;
END; 

SELECT dbo.MultiplyByTen(5) AS Result;


--ANS Q3

SELECT 
CASE
WHEN 100 < 200 THEN '100 IS LESSER THAN 200'
WHEN 100 > 200 THEN '100 IS GREATER THAN 200'
ELSE '100 IS EQUALS TO 200'
END AS [OUTPUT];


--ANS Q4

SELECT *,
CASE
WHEN AMOUNT >= 400 THEN 'HIGHER AMOUNT'
WHEN AMOUNT < 400 AND AMOUNT > 200 THEN 'MEDIUM AMOUNT'
ELSE 'LOW AMOUNT'
END AS [AMOUNT STATUS]
FROM ORDERS;


--ANS Q5

CREATE FUNCTION GETAMOUNTGREATERTHAN (@INPUTAMOUNT DECIMAL(10,2))
RETURNS TABLE
AS
RETURN
(
    SELECT *
    FROM ORDERS
    WHERE AMOUNT > @INPUTAMOUNT
);

SELECT * FROM DBO.GETAMOUNTGREATERTHAN(100);

